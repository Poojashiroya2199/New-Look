[{"F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\index.js":"1","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\App.js":"2","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\Login.jsx":"3","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\Signup.jsx":"4","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\Home.jsx":"5","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\images\\image.js":"6","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\data.js":"7","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\Product.jsx":"8","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\Products.jsx":"9","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\Form.jsx":"10","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\store.js":"11","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\actions\\Productaction.js":"12","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\CartScreen.jsx":"13","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\actions\\Cartaction.js":"14","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\Singin.jsx":"15","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\actions\\userAction.js":"16","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\Register.jsx":"17","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\ProductsScreen.jsx":"18","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\constants\\productConstants.js":"19","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\Rating.jsx":"20","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\constants\\userConstants.js":"21","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\reducers\\userReducers.js":"22","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\reducers\\orderReducers.js":"23","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\reducers\\productReducers.js":"24","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\reducers\\cartReducers.js":"25","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\constants\\cartConstants.js":"26","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\constants\\orderConstants.js":"27","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\ShippingScreen.jsx":"28","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\OrderScreen.jsx":"29","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\PaymentScreen.jsx":"30","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\PlaceOrderScreen.jsx":"31","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\ProfileScreen.jsx":"32","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\OrdersScreen.jsx":"33","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\PaypalButton.jsx":"34","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\CheckoutSteps.jsx":"35","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\actions\\orderActions.js":"36"},{"size":409,"mtime":1609836968589,"results":"37","hashOfConfig":"38"},{"size":446,"mtime":1610444470799,"results":"39","hashOfConfig":"38"},{"size":1482,"mtime":1609705684207,"results":"40","hashOfConfig":"38"},{"size":2065,"mtime":1609705681126,"results":"41","hashOfConfig":"38"},{"size":4055,"mtime":1618988625780,"results":"42","hashOfConfig":"38"},{"size":478,"mtime":1609749485845,"results":"43","hashOfConfig":"38"},{"size":1357,"mtime":1609705673007,"results":"44","hashOfConfig":"38"},{"size":7362,"mtime":1610733001472,"results":"45","hashOfConfig":"38"},{"size":2998,"mtime":1618988994573,"results":"46","hashOfConfig":"38"},{"size":1242,"mtime":1609941835390,"results":"47","hashOfConfig":"38"},{"size":2723,"mtime":1610445440895,"results":"48","hashOfConfig":"38"},{"size":5480,"mtime":1610443267002,"results":"49","hashOfConfig":"38"},{"size":6492,"mtime":1610481144634,"results":"50","hashOfConfig":"38"},{"size":2237,"mtime":1610442857338,"results":"51","hashOfConfig":"38"},{"size":4247,"mtime":1617707946257,"results":"52","hashOfConfig":"38"},{"size":3318,"mtime":1610440816358,"results":"53","hashOfConfig":"38"},{"size":2726,"mtime":1610443993255,"results":"54","hashOfConfig":"38"},{"size":11234,"mtime":1610478038071,"results":"55","hashOfConfig":"38"},{"size":1594,"mtime":1610438291564,"results":"56","hashOfConfig":"38"},{"size":1509,"mtime":1610438178729,"results":"57","hashOfConfig":"38"},{"size":924,"mtime":1610440806783,"results":"58","hashOfConfig":"38"},{"size":2467,"mtime":1610438694267,"results":"59","hashOfConfig":"38"},{"size":3162,"mtime":1610438646863,"results":"60","hashOfConfig":"38"},{"size":4475,"mtime":1610438516623,"results":"61","hashOfConfig":"38"},{"size":1873,"mtime":1610442809872,"results":"62","hashOfConfig":"38"},{"size":308,"mtime":1610442831943,"results":"63","hashOfConfig":"38"},{"size":1052,"mtime":1610442856176,"results":"64","hashOfConfig":"38"},{"size":2088,"mtime":1610449679308,"results":"65","hashOfConfig":"38"},{"size":4056,"mtime":1611995113740,"results":"66","hashOfConfig":"38"},{"size":1457,"mtime":1610479840814,"results":"67","hashOfConfig":"38"},{"size":3752,"mtime":1610480088451,"results":"68","hashOfConfig":"38"},{"size":3900,"mtime":1610481007499,"results":"69","hashOfConfig":"38"},{"size":2172,"mtime":1611995133938,"results":"70","hashOfConfig":"38"},{"size":1470,"mtime":1610438129578,"results":"71","hashOfConfig":"38"},{"size":445,"mtime":1610441285059,"results":"72","hashOfConfig":"38"},{"size":3535,"mtime":1610442920640,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1m8rj30",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\index.js",[],["156","157"],"F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\App.js",[],"F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\Login.jsx",[],["158","159"],"F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\Signup.jsx",[],"F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\Home.jsx",[],"F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\images\\image.js",[],["160","161"],"F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\data.js",[],"F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\Product.jsx",[],"F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\Products.jsx",["162"],"import React, { useEffect ,useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { useSelector ,useDispatch} from \"react-redux\";\r\nimport  {listProducts} from \"./../actions/Productaction\";\r\nimport Rating from '../components/Rating';\r\n\r\nexport default function Products(props){\r\n    // const [products,setproducts]=useState([]);\r\n    const [searchKeyword, setSearchKeyword] = useState('');\r\n    const [sortOrder, setSortOrder] = useState('');\r\n    const category = props.match.params.id ? props.match.params.id : '';\r\n    \r\n    const productList =useSelector(state=>state.productList);\r\n    const {products,loading,error}=productList;\r\n    const dispatch=useDispatch();\r\n    useEffect(()=>{\r\n        dispatch(listProducts(category));\r\n        return ()=>{ }\r\n    }, \r\n    //  eslint-disable-next-line \r\n    [category]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(listProducts(category, searchKeyword, sortOrder));\r\n      };\r\n      const sortHandler = (e) => {\r\n        setSortOrder(e.target.value);\r\n        dispatch(listProducts(category, searchKeyword, sortOrder));\r\n      };\r\n\r\n    return (\r\n        <>\r\n          {category && <h2>{category}</h2>}\r\n\r\n<ul className=\"filter\">\r\n  <li>\r\n    <form onSubmit={submitHandler}>\r\n      <input\r\n        name=\"searchKeyword\"\r\n        onChange={(e) => setSearchKeyword(e.target.value)}\r\n      />\r\n      <button type=\"submit\">Search</button>\r\n    </form>\r\n  </li>\r\n  {/* <li>\r\n    Sort By{' '}\r\n    <select name=\"sortOrder\" onChange={sortHandler}>\r\n      <option value=\"\">Newest</option>\r\n      <option value=\"lowest\">Lowest</option>\r\n      <option value=\"highest\">Highest</option>\r\n    </select>\r\n  </li> */}\r\n</ul>\r\n        { loading?<div>Loading..</div>:\r\n    error?{error}:<ul className=\"products\">\r\n        {\r\n            products.map((product)=>\r\n            <li key={product._id} >\r\n            <div className=\"product\">\r\n            <Link to={\"/product/\"+product._id} className=\"link\">\r\n                <img src={product.image} alt=\"image1\" className=\"productimage\"/>\r\n                </Link>\r\n                <div className=\"productname\">\r\n                    <Link to={\"/product/\"+product._id} className=\"link \">\r\n                        {product.name}\r\n                    </Link> \r\n                    </div>\r\n                <div className=\"productbrand\">{product.brand}</div>\r\n                <div className=\"productprice\">${product.price}</div>\r\n                <div className=\"productrating\">\r\n                <Rating\r\n                    value={product.rating}\r\n                    text={product.numReview + ' reviews'}\r\n                  />\r\n        {/* {product.rating} Stars ({product.numReview} Reviews) */}\r\n                 </div>\r\n            </div>\r\n        </li>\r\n            )}\r\n        </ul>}\r\n    </>)\r\n}\r\n\r\n // const fetchdata= async()=>{\r\n        //     const {data}=await axios(\"/api/products\");\r\n        //     setproducts(data)\r\n        // }\r\n        // fetchdata();","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\Form.jsx",[],"F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\store.js",[],"F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\actions\\Productaction.js",[],"F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\CartScreen.jsx",[],"F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\actions\\Cartaction.js",[],"F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\Singin.jsx",[],"F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\actions\\userAction.js",[],"F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\Register.jsx",["163"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./../css/Home.css\";\r\nimport {useDispatch,  useSelector } from \"react-redux\";\r\nimport {register } from \"./../actions/userAction\";\r\n\r\nexport default function RegisterScreen(props){\r\n    const [name,setName]=useState(\"\");\r\n    const [email,setEmail]=useState(\"\");\r\n    const [password,setPassword]=useState(\"\");\r\n    const [rePassword,setrePassword]=useState(\"\");\r\n\r\n    const userRegister= useSelector(state=>state.userRegister);\r\n    const {loading,userInfo,error}=userRegister;\r\n    const dispatch=useDispatch();\r\n    const redirect = props.location.search ? props.location.search.split(\"=\")[1] : '/';\r\n \r\n    useEffect(()=>{\r\n        if(userInfo){\r\n            props.history.push(redirect);\r\n        }\r\n        return (()=>{});\r\n     },\r\n     // eslint-disable-next-line\r\n      [userInfo]);\r\n\r\n  const submitHandler=(e)=>{\r\n      e.preventDefault();\r\n      dispatch(register(name,email,password));\r\n  }\r\n\r\n    return <div className=\"form\">\r\n        <form onSubmit={submitHandler}>\r\n            <ul className=\"formcontainer\">\r\n                <li >\r\n                    <h2>Create Account</h2>\r\n                </li>\r\n                <li>\r\n                    {loading && <div>Loading...</div>}\r\n                   { error && <div>{error}</div>}\r\n                </li>\r\n                <li>\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input type=\"text\" name=\"name\" id=\"name\"  onChange={(e)=>setName(e.target.value)}/>\r\n                </li>\r\n                <li>\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" name=\"email\" id=\"email\"  onChange={(e)=>setEmail(e.target.value)}/>\r\n                </li>\r\n                <li>\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" name=\"password\" id=\"password\" onChange={(e)=>setPassword(e.target.value)}/>\r\n                </li>\r\n                <li>\r\n                    <label htmlFor=\"rePassword\">Confirm Password</label>\r\n                    <input type=\"password\" name=\"Confirm Password\" id=\"rePassword\" onChange={(e)=>setrePassword(e.target.value)}/>\r\n                </li>\r\n                <li>\r\n                    <button className=\"button primary \" type=\"submit\">Register</button>\r\n                </li>\r\n                <li>Already have an account? </li>\r\n                <li>\r\n                    <Link to={redirect === \"/\" ? \"signin\" : \"signin?redirect=\" + redirect} className=\"button secondary textcenter link \" >Create your amazona Account</Link>\r\n                </li>\r\n            </ul>\r\n        </form>\r\n    </div>;\r\n}","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\ProductsScreen.jsx",["164","165","166","167","168"],"// import React,{useState, useEffect} from \"react\";\r\n// import {Link} from \"react-router-dom\";\r\n// import {useSelector, useDispatch} from \"react-redux\";\r\n// import {saveProduct} from \"./../actions/Productaction\";\r\n// export default function ProductsScreen(){\r\n\r\n//     const [name,setName]=useState(\"\");\r\n//     const [price,setPrice]=useState(\"\");\r\n//     const [image,setImage]=useState(\"\");\r\n//     const [description,setDescription]=useState(\"\");\r\n//     const [brand,setBrand]=useState(\"\");\r\n//     const [category,setCategory]=useState(\"\");\r\n//     const [countInStock,setcountInStock]=useState(\"\");\r\n//     const [rating,setRating]=useState(\"\");\r\n//     const [numReview,setnumReview]=useState(\"\");\r\n//     const productSave=useSelector(state=>state.productSave);\r\n//     const {loading:loadingSave, success:successSave, error:errorSave}=productSave;\r\n//     const dispatch=useDispatch();\r\n\r\n//     // useEffect(()=>{\r\n\r\n//     // });\r\n//     const submitHandler=(e)=>{\r\n//             e.preventDefault();\r\n//             dispatch(saveProduct({name,price,image,brand,description,category,countInStock,rating,numReview}));\r\n//     }\r\n//     return <div className=\"form\">\r\n//     <form onSubmit={submitHandler}>\r\n//         <ul className=\"formcontainer\">\r\n//             <li >\r\n//                 <h2>Create Product</h2>\r\n//             </li>\r\n//             <li>\r\n//                 {loadingSave && <div>Loading...</div>}\r\n//                 {errorSave && <div>{errorSave}</div>}\r\n//             </li>\r\n//             <li>\r\n//                 <label htmlFor=\"name\">Name</label>\r\n//                 <input type=\"text\" name=\"name\" id=\"name\"  onChange={(e)=>setName(e.target.value)}/>\r\n//             </li>\r\n//             <li>\r\n//                 <label htmlFor=\"price\">Price</label>\r\n//                 <input type=\"number\" name=\"price\" id=\"price\"  onChange={(e)=>setPrice(e.target.value)}/>\r\n//             </li>\r\n//             <li>\r\n//                 <label htmlFor=\"image\">Image</label>\r\n//                 <input type=\"text\" name=\"image\" id=\"image\" onChange={(e)=>setImage(e.target.value)} />\r\n//             </li>\r\n//             <li>\r\n//                 <label htmlFor=\"description\">Description</label>\r\n//                 <input type=\"text\" name=\"description\" id=\"description\"  onChange={(e)=>setDescription(e.target.value)}/>\r\n//             </li>\r\n//             <li>\r\n//                 <label htmlFor=\"brand\">Brand</label>\r\n//                 <input type=\"text\" name=\"brand\" id=\"brand\"  onChange={(e)=>setBrand(e.target.value)}/>\r\n//             </li>\r\n//             <li>\r\n//                 <label htmlFor=\"category\">Category</label>\r\n//                 <input type=\"text\" name=\"category\" id=\"category\"  onChange={(e)=>setCategory(e.target.value)}/>\r\n//             </li>\r\n//             <li>\r\n//                 <label htmlFor=\"countInStock\">countInStock</label>\r\n//                 <input type=\"number\" name=\"countInStock\" id=\"countInStock\"  onChange={(e)=>setcountInStock(e.target.value)}/>\r\n//             </li>\r\n//             <li>\r\n//                 <label htmlFor=\"rating\">rating</label>\r\n//                 <input type=\"number\" name=\"rating\" id=\"rating\"  onChange={(e)=>setRating(e.target.value)}/>\r\n//             </li>\r\n//             <li>\r\n//                 <label htmlFor=\"numReview\">numReview</label>\r\n//                 <input type=\"number\" name=\"numReview\" id=\"numReview\"  onChange={(e)=>setnumReview(e.target.value)}/>\r\n//             </li>\r\n//             <li>\r\n//                 <button className=\"button primary full-width\" type=\"submit\">Create</button>\r\n//             </li>\r\n          \r\n//         </ul>\r\n//     </form>\r\n// </div>;\r\n// }\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport axios from 'axios';\r\nimport {\r\n  saveProduct,\r\n  listProducts,\r\n  deleteProdcut,\r\n} from './../actions/Productaction';\r\n\r\nfunction ProductsScreen(props) {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [id, setId] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [price, setPrice] = useState('');\r\n  const [image, setImage] = useState('');\r\n  const [brand, setBrand] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [countInStock, setCountInStock] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [uploading, setUploading] = useState(false);\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, products, error } = productList;\r\n\r\n  const productSave = useSelector((state) => state.productSave);\r\n  const {\r\n    loading: loadingSave,\r\n    success: successSave,\r\n    error: errorSave,\r\n  } = productSave;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    success: successDelete,\r\n    error: errorDelete,\r\n  } = productDelete;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (successSave) {\r\n      setModalVisible(false);\r\n    }\r\n    dispatch(listProducts());\r\n    return () => {\r\n      //\r\n    };\r\n  }, [successSave, successDelete]);\r\n\r\n  const openModal = (product) => {\r\n    setModalVisible(true);\r\n    setId(product._id);\r\n    setName(product.name);\r\n    setPrice(product.price);\r\n    setDescription(product.description);\r\n    setImage(product.image);\r\n    setBrand(product.brand);\r\n    setCategory(product.category);\r\n    setCountInStock(product.countInStock);\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      saveProduct({\r\n        _id: id,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        countInStock,\r\n        description,\r\n      })\r\n    );\r\n  };\r\n  const deleteHandler = (product) => {\r\n    dispatch(deleteProdcut(product._id));\r\n  };\r\n  const uploadFileHandler = (e) => {\r\n    const file = e.target.files[0];\r\n    const bodyFormData = new FormData();\r\n    bodyFormData.append('image', file);\r\n    setUploading(true);\r\n    axios\r\n      .post('/api/uploads', bodyFormData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setImage(response.data);\r\n        setUploading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setUploading(false);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"content content-margined\">\r\n      <div className=\"product-header\">\r\n        <h3>Products</h3>\r\n        <button className=\"button primary\" onClick={() => openModal({})}>\r\n          Create Product\r\n        </button>\r\n      </div>\r\n      {modalVisible && (\r\n        <div className=\"form\">\r\n          <form onSubmit={submitHandler}>\r\n            <ul className=\"formcontainer\">\r\n              <li>\r\n                <h2>Create Product</h2>\r\n              </li>\r\n              <li>\r\n                {loadingSave && <div>Loading...</div>}\r\n                {errorSave && <div>{errorSave}</div>}\r\n              </li>\r\n\r\n              <li>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  id=\"name\"\r\n                  onChange={(e) => setName(e.target.value)}\r\n                ></input>\r\n              </li>\r\n              <li>\r\n                <label htmlFor=\"price\">Price</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"price\"\r\n                  value={price}\r\n                  id=\"price\"\r\n                  onChange={(e) => setPrice(e.target.value)}\r\n                ></input>\r\n              </li>\r\n              <li>\r\n                <label htmlFor=\"image\">Image</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"image\"\r\n                  value={image}\r\n                  id=\"image\"\r\n                  onChange={(e) => setImage(e.target.value)}\r\n                ></input>\r\n                <input type=\"file\" onChange={uploadFileHandler}></input>\r\n                {uploading && <div>Uploading...</div>}\r\n              </li>\r\n              <li>\r\n                <label htmlFor=\"brand\">Brand</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"brand\"\r\n                  value={brand}\r\n                  id=\"brand\"\r\n                  onChange={(e) => setBrand(e.target.value)}\r\n                ></input>\r\n              </li>\r\n              <li>\r\n                <label htmlFor=\"countInStock\">CountInStock</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"countInStock\"\r\n                  value={countInStock}\r\n                  id=\"countInStock\"\r\n                  onChange={(e) => setCountInStock(e.target.value)}\r\n                ></input>\r\n              </li>\r\n              <li>\r\n                <label htmlFor=\"name\">Category</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"category\"\r\n                  value={category}\r\n                  id=\"category\"\r\n                  onChange={(e) => setCategory(e.target.value)}\r\n                ></input>\r\n              </li>\r\n              <li>\r\n                <label htmlFor=\"description\">Description</label>\r\n                <textarea\r\n                  name=\"description\"\r\n                  value={description}\r\n                  id=\"description\"\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                ></textarea>\r\n              </li>\r\n              <li>\r\n                <button type=\"submit\" className=\"button primary\">\r\n                  {id ? 'Update' : 'Create'}\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setModalVisible(false)}\r\n                  className=\"button secondary\"\r\n                >\r\n                  Back\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </form>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"product-list\">\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Name</th>\r\n              <th>Price</th>\r\n              <th>Category</th>\r\n              <th>Brand</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {products.map((product) => (\r\n              <tr key={product._id}>\r\n                <td>{product._id}</td>\r\n                <td>{product.name}</td>\r\n                <td>{product.price}</td>\r\n                <td>{product.category}</td>\r\n                <td>{product.brand}</td>\r\n                <td>\r\n                  <button className=\"button\" onClick={() => openModal(product)}>\r\n                    Edit\r\n                  </button>{' '}\r\n                  <button\r\n                    className=\"button\"\r\n                    onClick={() => deleteHandler(product)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default ProductsScreen;","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\constants\\productConstants.js",[],"F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\Rating.jsx",[],"F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\constants\\userConstants.js",[],"F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\reducers\\userReducers.js",[],"F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\reducers\\orderReducers.js",[],"F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\reducers\\productReducers.js",[],"F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\reducers\\cartReducers.js",[],"F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\constants\\cartConstants.js",[],"F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\constants\\orderConstants.js",[],"F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\ShippingScreen.jsx",[],"F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\OrderScreen.jsx",["169","170","171","172"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { createOrder, detailsOrder, payOrder } from '../actions/orderActions';\r\nimport PaypalButton from '../components/PaypalButton';\r\nfunction OrderScreen(props) {\r\n\r\n  const orderPay = useSelector(state => state.orderPay);\r\n  const { loading: loadingPay, success: successPay, error: errorPay } = orderPay;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (successPay) {\r\n      props.history.push(\"/profile\");\r\n    } else {\r\n      dispatch(detailsOrder(props.match.params.id));\r\n    }\r\n    return () => {\r\n    };\r\n  }, [successPay]);\r\n\r\n  const handleSuccessPayment = (paymentResult) => {\r\n    dispatch(payOrder(order, paymentResult));\r\n  }\r\n\r\n  const orderDetails = useSelector(state => state.orderDetails);\r\n  const { loading, order, error } = orderDetails;\r\n\r\n  return loading ? <div>Loading ...</div> : error ? <div>{error}</div> :\r\n\r\n    <div>\r\n      <div className=\"placeorder\">\r\n        <div className=\"placeorder-info\">\r\n          <div>\r\n            <h3>\r\n              Shipping\r\n          </h3>\r\n            <div>\r\n              {order.shipping.address}, {order.shipping.city},\r\n          {order.shipping.postalCode}, {order.shipping.country},\r\n          </div>\r\n            <div>\r\n              {order.isDelivered ? \"Delivered at \" + order.deliveredAt : \"Not Delivered.\"}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <h3>Payment</h3>\r\n            <div>\r\n              Payment Method: {order.payment.paymentMethod}\r\n            </div>\r\n            <div>\r\n              {order.isPaid ? \"Paid at \" + order.paidAt : \"Not Paid.\"}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <ul className=\"cartlistcontainer\">\r\n              <li>\r\n                <h3>\r\n                  Shopping Cart\r\n          </h3>\r\n                <div>\r\n                  Price\r\n          </div>\r\n              </li>\r\n              {\r\n                order.orderItems.length === 0 ?\r\n                  <div>\r\n                    Cart is empty\r\n          </div>\r\n                  :\r\n                  order.orderItems.map(item =>\r\n                    <li key={item._id}>\r\n                      <div className=\"cartimage\">\r\n                        <img src={item.image} alt=\"product\" />\r\n                      </div>\r\n                      <div className=\"cartname\">\r\n                        <div>\r\n                          <Link to={\"/product/\" + item.product}>\r\n                            {item.name}\r\n                          </Link>\r\n\r\n                        </div>\r\n                        <div>\r\n                          Qty: {item.qty}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"cartprice\">\r\n                        ${item.price}\r\n                      </div>\r\n                    </li>\r\n                  )\r\n              }\r\n            </ul>\r\n          </div>\r\n\r\n\r\n        </div>\r\n        <div className=\"placeorder-action\">\r\n          <ul>\r\n            <li className=\"placeorder-actions-payment\">\r\n              {loading && <div>Finishing Payment...</div>}\r\n              {!order.isPaid &&\r\n                <PaypalButton\r\n                  amount={order.totalPrice}\r\n                  onSuccess={handleSuccessPayment} />\r\n              }\r\n            </li>\r\n            <li>\r\n              <h3>Order Summary</h3>\r\n            </li>\r\n            <li>\r\n              <div>Items</div>\r\n              <div>${order.itemsPrice}</div>\r\n            </li>\r\n            <li>\r\n              <div>Shipping</div>\r\n              <div>${order.shippingPrice}</div>\r\n            </li>\r\n            <li>\r\n              <div>Tax</div>\r\n              <div>${order.taxPrice}</div>\r\n            </li>\r\n            <li>\r\n              <div>Order Total</div>\r\n              <div>${order.totalPrice}</div>\r\n            </li>\r\n          </ul>\r\n\r\n\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n}\r\n\r\nexport default OrderScreen;","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\PaymentScreen.jsx",["173","174","175"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { savePayment } from '../actions/Cartaction';\r\nimport CheckoutSteps from './CheckoutSteps';\r\n\r\nfunction PaymentScreen(props) {\r\n  const [paymentMethod, setPaymentMethod] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePayment({ paymentMethod }));\r\n    props.history.push('placeorder');\r\n  };\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2 step3></CheckoutSteps>\r\n      <div className=\"form\">\r\n        <form onSubmit={submitHandler}>\r\n          <ul className=\"formcontainer\">\r\n            <li>\r\n              <h2>Payment</h2>\r\n            </li>\r\n\r\n            <li>\r\n              <div>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"paymentMethod\"\r\n                  id=\"paymentMethod\"\r\n                  value=\"paypal\"\r\n                  onChange={(e) => setPaymentMethod(e.target.value)}\r\n                ></input>\r\n                <label for=\"paymentMethod\">Paypal</label>\r\n              </div>\r\n            </li>\r\n\r\n            <li>\r\n              <button type=\"submit\" className=\"button primary\">\r\n                Continue\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default PaymentScreen;","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\PlaceOrderScreen.jsx",["176","177","178"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { createOrder } from '../actions/orderActions';\r\nfunction PlaceOrderScreen(props) {\r\n\r\n  const cart = useSelector(state => state.cart);\r\n  const orderCreate = useSelector(state => state.orderCreate);\r\n  const { loading, success, error, order } = orderCreate;\r\n\r\n  const { cartItems, shipping, payment } = cart;\r\n  if (!shipping.address) {\r\n    props.history.push(\"/shipping\");\r\n  } else if (!payment.paymentMethod) {\r\n    props.history.push(\"/payment\");\r\n  }\r\n  const itemsPrice = cartItems.reduce((a, c) => a + c.price * c.qty, 0);\r\n  const shippingPrice = itemsPrice > 100 ? 0 : 10;\r\n  const taxPrice = 0.15 * itemsPrice;\r\n  const totalPrice = itemsPrice + shippingPrice + taxPrice;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const placeOrderHandler = () => {\r\n    // create an order\r\n    dispatch(createOrder({\r\n      orderItems: cartItems, shipping, payment, itemsPrice, shippingPrice,\r\n      taxPrice, totalPrice\r\n    }));\r\n  }\r\n  useEffect(() => {\r\n    if (success) {\r\n      props.history.push(\"/order/\" + order._id);\r\n    }\r\n\r\n  }, [success]);\r\n\r\n  return <div>\r\n    <CheckoutSteps step1 step2 step3 step4 ></CheckoutSteps>\r\n    <div className=\"placeorder\">\r\n      <div className=\"placeorder-info\">\r\n        <div>\r\n          <h3>\r\n            Shipping\r\n          </h3>\r\n          <div>\r\n            {cart.shipping.address}, {cart.shipping.city},\r\n          {cart.shipping.postalCode}, {cart.shipping.country},\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <h3>Payment</h3>\r\n          <div>\r\n            Payment Method: {cart.payment.paymentMethod}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <ul className=\"cartlistcontainer\">\r\n            <li>\r\n              <h3>\r\n                Shopping Cart\r\n          </h3>\r\n              <div>\r\n                Price\r\n          </div>\r\n            </li>\r\n            {\r\n              cartItems.length === 0 ?\r\n                <div>\r\n                  Cart is empty\r\n          </div>\r\n                :\r\n                cartItems.map(item =>\r\n                  <li>\r\n                    <div className=\"cartimage\">\r\n                      <img src={item.image} alt=\"product\" />\r\n                    </div>\r\n                    <div className=\"cartname\">\r\n                      <div>\r\n                        <Link to={\"/product/\" + item.product}>\r\n                          {item.name}\r\n                        </Link>\r\n\r\n                      </div>\r\n                      <div>\r\n                        Qty: {item.qty}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"cartprice\">\r\n                      ${item.price}\r\n                    </div>\r\n                  </li>\r\n                )\r\n            }\r\n          </ul>\r\n        </div>\r\n\r\n      \r\n      </div>\r\n      <div className=\"placeorder-action\">\r\n        <ul>\r\n          <li>\r\n            <button className=\"button primary fullwidth\" onClick={placeOrderHandler} >Place Order</button>\r\n          </li>\r\n          <li>\r\n            <h3>Order Summary</h3>\r\n          </li>\r\n          <li>\r\n            <div>Items</div>\r\n            <div>${itemsPrice}</div>\r\n          </li>\r\n          <li>\r\n            <div>Shipping</div>\r\n            <div>${shippingPrice}</div>\r\n          </li>\r\n          <li>\r\n            <div>Tax</div>\r\n            <div>${taxPrice}</div>\r\n          </li>\r\n          <li>\r\n            <div>Order Total</div>\r\n            <div>${totalPrice}</div>\r\n          </li>\r\n        </ul>\r\n</div>\r\n\r\n</div>\r\n  </div>\r\n\r\n}\r\n\r\nexport default PlaceOrderScreen;","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\ProfileScreen.jsx",[],"F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\OrdersScreen.jsx",["179","180","181","182"],"import React, { useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { listOrders, deleteOrder } from '../actions/orderActions';\r\n\r\nfunction OrdersScreen(props) {\r\n  const orderList = useSelector(state => state.orderList);\r\n  const { loading, orders, error } = orderList;\r\n\r\n  const orderDelete = useSelector(state => state.orderDelete);\r\n  const { loading: loadingDelete, success: successDelete, error: errorDelete } = orderDelete;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(listOrders());\r\n    return () => {\r\n      //\r\n    };\r\n  }, [successDelete]);\r\n\r\n  const deleteHandler = (order) => {\r\n    dispatch(deleteOrder(order._id));\r\n  }\r\n  return loading ? <div>Loading...</div> :\r\n    <div className=\"content content-margined\">\r\n\r\n      <div className=\"order-header\">\r\n        <h3>Orders</h3>\r\n      </div>\r\n      <div className=\"order-list\">\r\n\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>USER</th>\r\n              <th>PAID</th>\r\n              <th>PAID AT</th>\r\n              <th>DELIVERED</th>\r\n              <th>DELIVERED AT</th>\r\n              <th>ACTIONS</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map(order => (<tr key={order._id}>\r\n              <td>{order._id}</td>\r\n              <td>{order.createdAt}</td>\r\n              <td>{order.totalPrice}</td>\r\n              <td>{order.user.name}</td>\r\n              <td>{order.isPaid.toString()}</td>\r\n              <td>{order.paidAt}</td>\r\n              <td>{order.isDelivered.toString()}</td>\r\n              <td>{order.deliveredAt}</td>\r\n              <td>\r\n                <Link to={\"/order/\" + order._id} className=\"button secondary\" >Details</Link>\r\n                {' '}\r\n                <button type=\"button\" onClick={() => deleteHandler(order)} className=\"button secondary\">Delete</button>\r\n              </td>\r\n            </tr>))}\r\n          </tbody>\r\n        </table>\r\n\r\n      </div>\r\n    </div>\r\n}\r\nexport default OrdersScreen;","F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\PaypalButton.jsx",[],"F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\components\\CheckoutSteps.jsx",[],"F:\\desktop 2021\\pooja\\nodestart\\pooja\\src\\actions\\orderActions.js",[],{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"183","replacedBy":"187"},{"ruleId":"185","replacedBy":"188"},{"ruleId":"183","replacedBy":"189"},{"ruleId":"185","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":27,"column":13,"nodeType":"193","messageId":"194","endLine":27,"endColumn":24},{"ruleId":"191","severity":1,"message":"195","line":11,"column":12,"nodeType":"193","messageId":"194","endLine":11,"endColumn":22},{"ruleId":"191","severity":1,"message":"196","line":102,"column":11,"nodeType":"193","messageId":"194","endLine":102,"endColumn":18},{"ruleId":"191","severity":1,"message":"197","line":102,"column":30,"nodeType":"193","messageId":"194","endLine":102,"endColumn":35},{"ruleId":"191","severity":1,"message":"198","line":113,"column":14,"nodeType":"193","messageId":"194","endLine":113,"endColumn":27},{"ruleId":"191","severity":1,"message":"199","line":115,"column":12,"nodeType":"193","messageId":"194","endLine":115,"endColumn":23},{"ruleId":"200","severity":1,"message":"201","line":127,"column":6,"nodeType":"202","endLine":127,"endColumn":34,"suggestions":"203"},{"ruleId":"191","severity":1,"message":"204","line":4,"column":10,"nodeType":"193","messageId":"194","endLine":4,"endColumn":21},{"ruleId":"191","severity":1,"message":"205","line":9,"column":20,"nodeType":"193","messageId":"194","endLine":9,"endColumn":30},{"ruleId":"191","severity":1,"message":"206","line":9,"column":60,"nodeType":"193","messageId":"194","endLine":9,"endColumn":68},{"ruleId":"200","severity":1,"message":"207","line":19,"column":6,"nodeType":"202","endLine":19,"endColumn":18,"suggestions":"208"},{"ruleId":"191","severity":1,"message":"209","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":26},{"ruleId":"191","severity":1,"message":"210","line":2,"column":10,"nodeType":"193","messageId":"194","endLine":2,"endColumn":14},{"ruleId":"191","severity":1,"message":"211","line":3,"column":10,"nodeType":"193","messageId":"194","endLine":3,"endColumn":21},{"ruleId":"191","severity":1,"message":"196","line":10,"column":11,"nodeType":"193","messageId":"194","endLine":10,"endColumn":18},{"ruleId":"191","severity":1,"message":"197","line":10,"column":29,"nodeType":"193","messageId":"194","endLine":10,"endColumn":34},{"ruleId":"200","severity":1,"message":"212","line":37,"column":6,"nodeType":"202","endLine":37,"endColumn":15,"suggestions":"213"},{"ruleId":"191","severity":1,"message":"197","line":8,"column":28,"nodeType":"193","messageId":"194","endLine":8,"endColumn":33},{"ruleId":"191","severity":1,"message":"198","line":11,"column":20,"nodeType":"193","messageId":"194","endLine":11,"endColumn":33},{"ruleId":"191","severity":1,"message":"199","line":11,"column":66,"nodeType":"193","messageId":"194","endLine":11,"endColumn":77},{"ruleId":"200","severity":1,"message":"201","line":20,"column":6,"nodeType":"202","endLine":20,"endColumn":21,"suggestions":"214"},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],["215"],["216"],["215"],["216"],"no-unused-vars","'sortHandler' is assigned a value but never used.","Identifier","unusedVar","'rePassword' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'loadingDelete' is assigned a value but never used.","'errorDelete' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["217"],"'createOrder' is defined but never used.","'loadingPay' is assigned a value but never used.","'errorPay' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'props.history', and 'props.match.params.id'. Either include them or remove the dependency array.",["218"],"'useEffect' is defined but never used.","'Link' is defined but never used.","'useSelector' is defined but never used.","React Hook useEffect has missing dependencies: 'order._id' and 'props.history'. Either include them or remove the dependency array.",["219"],["220"],"no-global-assign","no-unsafe-negation",{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},"Update the dependencies array to be: [successSave, successDelete, dispatch]",{"range":"229","text":"230"},"Update the dependencies array to be: [dispatch, props.history, props.match.params.id, successPay]",{"range":"231","text":"232"},"Update the dependencies array to be: [order._id, props.history, success]",{"range":"233","text":"234"},"Update the dependencies array to be: [dispatch, successDelete]",{"range":"235","text":"236"},[5115,5143],"[successSave, successDelete, dispatch]",[678,690],"[dispatch, props.history, props.match.params.id, successPay]",[1245,1254],"[order._id, props.history, success]",[645,660],"[dispatch, successDelete]"]